<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
     	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/util 
	    http://www.springframework.org/schema/util/spring-util.xsd
	    http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
        
    <context:component-scan base-package="com.richest.manager"/>
	<mvc:default-servlet-handler/>
    <context:annotation-config />
   

	<context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
	
	<!-- spring配置数据源  -->
	<!-- <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
	   <property name="driverClass" value="${jdbc.driverClassName}" />
	   <property name="jdbcUrl" value="${jdbc.url}" />
	   <property name="username" value="${jdbc.username}"/>
	   <property name="password" value="${jdbc.password}"/>
	   <property name="idleConnectionTestPeriod" value="60"/>
	   <property name="idleMaxAge" value="240"/>
	   <property name="maxConnectionsPerPartition" value="50"/>
	   <property name="minConnectionsPerPartition" value="10"/>
	   <property name="partitionCount" value="4"/>
	   <property name="acquireIncrement" value="5"/>
	   <property name="statementsCacheSize" value="100"/>
	   <property name="releaseHelperThreads" value="3"/>
	</bean> -->
	
	 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="maxActive" value="100"></property>
        <property name="maxIdle" value="30"></property>
        <property name="maxWait" value="100"></property>
        <property name="defaultAutoCommit" value="true"></property>
    </bean>


	<!-- 配置mybitasSqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
	</bean>

	<!-- 配置SqlSessionTemplate -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"  scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<mvc:interceptors>
		<mvc:interceptor> 
			<mvc:mapping path="/recommend"/>
			<mvc:mapping path="/customer"/>
			<!-- <mvc:exclude-mapping path="/"/>  
			<mvc:exclude-mapping path="/index/**"/>
			<mvc:exclude-mapping path="/login/**"/>
			<mvc:exclude-mapping path="/user/**"/>
			<mvc:exclude-mapping path="/building/**"/> -->
	    	<bean class="com.richest.manager.controller.BaseController"/>
    	</mvc:interceptor>
	</mvc:interceptors>
	<!-- 自定义异常处理，SimpleMappingExceptionResolver这个类可以是个空类，但是要写，方便在java代码里面使用 -->  
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
      <property name="exceptionMappings">  
        <props>  
          <prop key="com.richest.manager.utils.NullUserException">redirect:/login</prop>  
        </props>  
      </property>  
    </bean>
	<!-- 事务配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
    
	<!-- 使用annotation注解方式配置事务  -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>  
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" ></bean>
	<util:properties id="settings" location="classpath:manager.properties" />
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<!-- 默认的注解映射的支持 -->
	<mvc:annotation-driven />
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- <property name="viewClass"> <value>org.springframework.web.servlet.view.JstlView</value> </property> -->
		<property name="prefix">
			<value>/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	
	<!-- 出发器的配置 -->
	<bean id="startQuartz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="wXAccessTokenUtildetail"/>
			</list>
		</property>
	</bean>
	
	<!-- 调度的配置 -->
	<bean id="wXAccessTokenUtildetail" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="wXAccessTokenUtiljob"/>
		</property>
		<property name="cronExpression">
			<value>0 3 * * * ?</value>
		</property>
	</bean>
	
	<!-- job的配置 -->
	<bean id="wXAccessTokenUtiljob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="WXAccessTokenUtil"/>
		</property>
		<property name="targetMethod">
			<value>getTokenFromWX</value>
		</property>
	</bean>
	
	<!-- 工作BEAN -->
	<bean id="WXAccessTokenUtil" class="com.richest.manager.quartz.job.WXAccessTokenUtil"></bean>
</beans>